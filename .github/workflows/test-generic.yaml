name: Trunkbased - Main Branch

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write
  security-events: write
  actions: write
  pull-requests: write
  packages: write

jobs:
  release-version:
    runs-on: ubuntu-latest
    outputs:
      release_prs_created: ${{ steps.release.outputs.prs_created }}
      release_prs: ${{ steps.release.outputs.prs }}
      new_version: ${{ steps.release.outputs.version }}  # Capture the new version from release-please
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Release Please
        uses: google-github-actions/release-please-action@a37ac6e4f6449ce8b3f7607e4d97d0146028dc0b # v4
        id: release
        with:
          token: ${{ github.token }}
          release-type: node
          default-branch: main

      - name: Extract headBranchName
        id: extract_branch_name
        run: |
          HEAD_BRANCH_NAME=$(echo '${{ steps.release.outputs.prs }}' | jq -r '.[0].headBranchName')
          echo "HEAD_BRANCH_NAME=$HEAD_BRANCH_NAME" >> $GITHUB_ENV
          echo "steps name :: $HEAD_BRANCH_NAME"

      - name: Merge Pull Request
        if: steps.release.outputs.prs_created == 'true'
        run: |
          PR_NUMBER=$(gh pr list --state open --head $HEAD_BRANCH_NAME --json number --limit 1 | jq '.[] | .number')
          if [ -n "$PR_NUMBER" ]; then
            gh pr merge $PR_NUMBER --merge --auto --delete-branch
            echo "PR #$PR_NUMBER merged and branch deleted."
          else
            echo "No PR found to merge."
          fi
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Change Label to autorelease:tagged
        if: steps.release.outputs.prs_created == 'true'
        run: |
          PR_NUMBER=$(gh pr list --state closed --head $HEAD_BRANCH_NAME --json number --limit 1 | jq '.[] | .number')
          if [ -n "$PR_NUMBER" ]; then
            gh pr edit $PR_NUMBER --remove-label "autorelease: pending" --add-label "autorelease: tagged"
            echo "PR #$PR_NUMBER label changed to autorelease: tagged."
          else
            echo "No PR found to update label."
          fi
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Create Release and Tag
        if: steps.release.outputs.prs_created == 'true'
        run: |
          NEW_VERSION="${{ steps.release.outputs.version }}"
          TAG_NAME="v$NEW_VERSION"
          git tag $TAG_NAME
          git push origin $TAG_NAME
          gh release create $TAG_NAME --notes "Release $NEW_VERSION created after merging PR #$PR_NUMBER."
        env:
          GITHUB_TOKEN: ${{ github.token }}
