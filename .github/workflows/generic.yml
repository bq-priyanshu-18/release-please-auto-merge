name: Trunkbased - Main Branch

on:
 push:
   branches:
     - mains

# on:
#  workflow_call:
#    inputs:
#      release_type:
#        type: string
#        description: 'The release type for release-please.'
#        required: true
#        default: 'node'

#    outputs:
#     release_prs_created:
#       description: "The first output string"
#       value: ${{ jobs.release-version.outputs.release_prs_created }}

#     release_prs:
#       description: "The first output string"
#       value: ${{ jobs.release-version.outputs.release_prs }}

permissions:
  id-token: write
  contents: write
  security-events: write
  actions: write
  pull-requests: write
  packages: write

jobs:
  release-version:
   runs-on: ubuntu-latest
   outputs:
     release_prs_created: ${{ steps.release.outputs.prs_created }}
     release_prs: ${{ steps.release.outputs.prs }} 
   steps:
     - name: Checkout Repository
       uses: actions/checkout@v3

     - name: Release Please
       uses: google-github-actions/release-please-action@a37ac6e4f6449ce8b3f7607e4d97d0146028dc0b # v4
       id: release
       with:
         token: ${{ github.token }}
         release-type: node
         default-branch: main

     - name: Extract headBranchName
       id: extract_branch_name
       run: |
         HEAD_BRANCH_NAME=$(echo '${{ steps.release.outputs.prs }}' | jq -r '.[0].headBranchName')
         echo "HEAD_BRANCH_NAME=$HEAD_BRANCH_NAME" >> $GITHUB_ENV
         echo "steps name :: $HEAD_BRANCH_NAME"

     # - name: Merge Pull Request
     #   if: steps.release.outputs.prs_created == 'true'
     #   run: |
     #     PR_NUMBER=$(gh pr list --state open --head $HEAD_BRANCH_NAME --json number --limit 1 | jq '.[] | .number')
     #     if [ -n "$PR_NUMBER" ]; then
     #       gh pr merge $PR_NUMBER --merge --auto --delete-branch
     #       echo "PR #$PR_NUMBER merged and branch deleted."
     #     else
     #       echo "No PR found to merge."
     #     fi
     #   env:
     #     GITHUB_TOKEN: ${{ github.token }}
    
  # # release-check:
  # #  runs-on: ubuntu-latest    
  # #  needs: release-version 
  # #  if: needs.release-version.outputs.release_prs_created == 'true'
  # #  steps:
  # #   - name: Release Check
  # #     run: |
  # #      echo "Release check ::::"
